/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bancobbdd;


import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.sql.*;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form UserFrame
     */
    public Admin() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/layout/logo.png"));

        // Establece la imagen como icono del sistema
        setIconImage(icon.getImage());
        setSize(600, 600);
        setLocationRelativeTo(null);
        initComponents();
        initListeners();
        jFieldTransparente();
        toogleButton();
    }

    BancoBBDD bancobbdd = BancoBBDD.getInstance();
    Connection conn = bancobbdd.conn;
    public ImagenToogle panel;
    boolean currUserDisabled = false;

    //Apliacr diseño optionPane
    UIManager UI;
    //Drag and Drop en la interfaz
    int xx = 0;
    int yy = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfNIF = new javax.swing.JTextField();
        bToggleUser = new javax.swing.JButton();
        Fondo = new javax.swing.JPanel(){

            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon(getClass().getResource("/layout/fondo.gif"));
                Image i = im.getImage();
                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        Close = new javax.swing.JPanel(){

            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon(getClass().getResource("/imagenes/close.png"));
                Image i = im.getImage();
                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        Minimize = new javax.swing.JPanel(){

            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon(getClass().getResource("/imagenes/minimize.png"));
                Image i = im.getImage();
                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        DragDrop = new javax.swing.JPanel();
        IconoDni = new javax.swing.JPanel(){

            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon(getClass().getResource("/imagenes/Dni.png"));
                Image i = im.getImage();
                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        spUser = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable(){
            // Agrega aquí el código para cambiar la fuente del encabezado
            {

                getTableHeader().setFont(new Font("Rockwell", Font.BOLD, 12));

                // Centrar el contenido del header
                ((DefaultTableCellRenderer) getTableHeader().getDefaultRenderer())
                .setHorizontalAlignment(JLabel.CENTER);

                // Centrar el contenido de todos los campos de la tabla
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment( JLabel.CENTER );
                setDefaultRenderer(Object.class, centerRenderer);
                // Cambiar el color del header
                getTableHeader().setBackground(Color.BLUE);
                getTableHeader().setForeground(new Color(28, 74, 106));
            }

        };
        spAccounts = new javax.swing.JScrollPane();
        tableAccounts = new javax.swing.JTable(){
            // Agrega aquí el código para cambiar la fuente del encabezado
            {
                getTableHeader().setFont(new Font("Rockwell", Font.BOLD, 12));

                // Centrar el contenido del header
                ((DefaultTableCellRenderer) getTableHeader().getDefaultRenderer())
                .setHorizontalAlignment(JLabel.CENTER);

                // Centrar el contenido de todos los campos de la tabla
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment( JLabel.CENTER );
                setDefaultRenderer(Object.class, centerRenderer);
                getTableHeader().setForeground(new Color(28, 74, 106));
            }

        };
        user = new javax.swing.JLabel();
        labelUserMoney = new javax.swing.JLabel();
        LastestTransactions = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableTransactions = new javax.swing.JTable(){
            // Agrega aquí el código para cambiar la fuente del encabezado
            {
                getTableHeader().setFont(new Font("Rockwell", Font.BOLD, 12));

                // Centrar el contenido del header
                ((DefaultTableCellRenderer) getTableHeader().getDefaultRenderer())
                .setHorizontalAlignment(JLabel.CENTER);

                // Centrar el contenido de todos los campos de la tabla
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment( JLabel.CENTER );
                setDefaultRenderer(Object.class, centerRenderer);

                getTableHeader().setForeground(new Color(28, 74, 106));
            }

        };
        FirstName = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        LastName = new javax.swing.JLabel();
        tfLastName = new javax.swing.JTextField();
        EMail = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        PhoneNumber = new javax.swing.JLabel();
        tfPhoneNumber = new javax.swing.JTextField();
        Address = new javax.swing.JLabel();
        tfAddress = new javax.swing.JTextField();
        IconoDni1 = new javax.swing.JPanel(){

            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon(getClass().getResource("/imagenes/atras2.png"));
                Image i = im.getImage();
                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        AccountsUser = new javax.swing.JLabel();
        tfPassword = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        tfAddUser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfIbanAddUser = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel() {
            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon(getClass().getResource("/layout/modify.png"));
                Image i = im.getImage();
                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        }

        ;
        jPanel7 = new javax.swing.JPanel();

        tfNIF.setText("jTextField1");

        bToggleUser.setText("Disable");
        bToggleUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bToggleUserMouseClicked(evt);
            }
        });
        bToggleUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bToggleUserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        Fondo.setPreferredSize(new java.awt.Dimension(1300, 720));

        Close.setPreferredSize(new java.awt.Dimension(18, 18));
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseMouseEntered(evt);
            }
        });
        Close.setLayout(new java.awt.BorderLayout());

        Minimize.setPreferredSize(new java.awt.Dimension(18, 18));
        Minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MinimizeMouseEntered(evt);
            }
        });
        Minimize.setLayout(new java.awt.BorderLayout());

        DragDrop.setOpaque(false);
        DragDrop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DragDropMouseDragged(evt);
            }
        });
        DragDrop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DragDropMousePressed(evt);
            }
        });
        DragDrop.setLayout(new java.awt.BorderLayout());

        IconoDni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IconoDniMouseClicked(evt);
            }
        });
        IconoDni.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableUser.setAutoCreateRowSorter(true);
        tableUser.setBackground(new java.awt.Color(147, 85, 180));
        tableUser.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tableUser.setForeground(new java.awt.Color(255, 255, 255));
        tableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableUser.setSelectionBackground(new java.awt.Color(102, 0, 102));
        spUser.setViewportView(tableUser);

        tableAccounts.setBackground(new java.awt.Color(147, 85, 180));
        tableAccounts.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tableAccounts.setForeground(new java.awt.Color(255, 255, 255));
        tableAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableAccounts.setSelectionBackground(new java.awt.Color(102, 0, 102));
        spAccounts.setViewportView(tableAccounts);

        user.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        user.setText("User");

        labelUserMoney.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        labelUserMoney.setForeground(new java.awt.Color(255, 255, 255));
        labelUserMoney.setText("Total money: 0");

        LastestTransactions.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        LastestTransactions.setForeground(new java.awt.Color(255, 255, 255));
        LastestTransactions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LastestTransactions.setText("Latest Transactions");

        tableTransactions.setBackground(new java.awt.Color(147, 85, 180));
        tableTransactions.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tableTransactions.setForeground(new java.awt.Color(255, 255, 255));
        tableTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableTransactions.setSelectionBackground(new java.awt.Color(102, 0, 102));
        jScrollPane3.setViewportView(tableTransactions);

        FirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        FirstName.setForeground(new java.awt.Color(255, 255, 255));
        FirstName.setText("First Name");

        tfFirstName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfFirstName.setForeground(java.awt.Color.white);
        tfFirstName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFirstNameActionPerformed(evt);
            }
        });

        LastName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        LastName.setForeground(new java.awt.Color(255, 255, 255));
        LastName.setText("Last Name");

        tfLastName.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfLastName.setForeground(java.awt.Color.white);
        tfLastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        EMail.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        EMail.setForeground(new java.awt.Color(255, 255, 255));
        EMail.setText("E-Mail");

        tfEmail.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfEmail.setForeground(java.awt.Color.white);
        tfEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        PhoneNumber.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        PhoneNumber.setForeground(new java.awt.Color(255, 255, 255));
        PhoneNumber.setText("Phone Number");

        tfPhoneNumber.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfPhoneNumber.setForeground(new java.awt.Color(255, 255, 255));
        tfPhoneNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        Address.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        Address.setForeground(new java.awt.Color(255, 255, 255));
        Address.setText("Address");

        tfAddress.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfAddress.setForeground(new java.awt.Color(255, 255, 255));
        tfAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        IconoDni1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IconoDni1MouseClicked(evt);
            }
        });
        IconoDni1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AccountsUser.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        AccountsUser.setForeground(new java.awt.Color(255, 255, 255));
        AccountsUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AccountsUser.setText("Accounts of user");

        tfPassword.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfPassword.setForeground(new java.awt.Color(255, 255, 255));
        tfPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        Password.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        Password.setForeground(new java.awt.Color(255, 255, 255));
        Password.setText("Password");

        tfAddUser.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfAddUser.setForeground(new java.awt.Color(255, 255, 255));
        tfAddUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NIF usuario a añadir");

        tfIbanAddUser.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        tfIbanAddUser.setForeground(new java.awt.Color(255, 255, 255));
        tfIbanAddUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton1.setBackground(new java.awt.Color(91, 25, 199));
        jButton1.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ADD USER TO ACCOUNT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("IBAN de la cuenta a la que se va a añadir");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout FondoLayout = new javax.swing.GroupLayout(Fondo);
        Fondo.setLayout(FondoLayout);
        FondoLayout.setHorizontalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                .addGap(0, 572, Short.MAX_VALUE)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                        .addComponent(LastestTransactions)
                        .addGap(551, 551, 551))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                        .addComponent(AccountsUser, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(408, 408, 408)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(0, 1085, Short.MAX_VALUE)
                        .addComponent(labelUserMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addComponent(DragDrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(IconoDni1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spUser)
                            .addComponent(spAccounts)
                            .addComponent(jScrollPane3))))
                .addGap(21, 21, 21))
            .addGroup(FondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IconoDni, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(551, 551, 551)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(FondoLayout.createSequentialGroup()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(FirstName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159)
                                .addComponent(jLabel2)
                                .addGap(16, 16, 16))
                            .addGroup(FondoLayout.createSequentialGroup()
                                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                                        .addComponent(LastName)
                                        .addGap(58, 58, 58)))
                                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(FondoLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(FondoLayout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(EMail)))
                                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(FondoLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(FondoLayout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(PhoneNumber))))
                            .addComponent(tfIbanAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addComponent(tfAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(Address)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Password)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(119, 119, 119))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        FondoLayout.setVerticalGroup(
            FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoLayout.createSequentialGroup()
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DragDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IconoDni, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(user))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spUser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(IconoDni1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(AccountsUser))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelUserMoney)
                .addGap(7, 7, 7)
                .addComponent(LastestTransactions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Password)
                            .addComponent(Address))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EMail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(FondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfIbanAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FondoLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );

        IconoDni1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void toogleButton(){
        panel = new ImagenToogle("/layout/disable.png");
        jPanel7.add(panel);
        panel.setSize(jPanel7.getSize());
        panel.setBackground(new Color(0, 0, 0, 0));
    }
//Metodo para volver los jFieldTransparentes
    private void jFieldTransparente() {
        // Crear un borde personalizado con bordes blancos de 1 píxeles
        Border borde = BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(Color.WHITE, 1),
                BorderFactory.createEmptyBorder(1, 1, 1, 1)
        );

        // Establecer el borde personalizado en los campos de texto
        tfFirstName.setBorder(borde);
        tfLastName.setBorder(borde);
        tfEmail.setBorder(borde);
        tfPhoneNumber.setBorder(borde);
        tfAddress.setBorder(borde);
        tfPassword.setBorder(borde);
        tfAddUser.setBorder(borde);
        tfIbanAddUser.setBorder(borde);

        tfFirstName.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfLastName.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfEmail.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfPhoneNumber.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfAddress.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfPassword.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfAddUser.setBackground(new java.awt.Color(0, 0, 0, 0));
        tfIbanAddUser.setBackground(new java.awt.Color(0, 0, 0, 0));

    }

    private void initListeners() {
    // Agregar un listener a la selección de la tabla de cuentas
    tableAccounts.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
        // Comprobar que la selección ha terminado
        if (!e.getValueIsAdjusting()) {
            // Obtener la fila seleccionada
            int selectedRow = tableAccounts.getSelectedRow();
            // Obtener el IBAN de la cuenta bancaria de la fila seleccionada
            String accountIban = tableAccounts.getValueAt(selectedRow, 0).toString();
            // Imprimir el IBAN en la consola
            System.out.println(accountIban);
            // Obtener el conjunto de resultados de transacciones de la cuenta bancaria
            ResultSet rsTrans = bancobbdd.getTransactionsAccount(accountIban);
            // Establecer el modelo de datos de la tabla de transacciones con los resultados obtenidos
            tableTransactions.setModel(getTableData(rsTrans));
        }
    });
    // Agregar un listener a la selección de la tabla de usuarios
    tableUser.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
        // Comprobar que la selección ha terminado
        if (!e.getValueIsAdjusting()) {
            // Actualizar los campos de texto de la interfaz de usuario con los datos del usuario seleccionado
            setDataOnTF();
        }
    });
}
    

    private void setDataOnTF() {
        int selectedRow = tableUser.getSelectedRow();
        if (selectedRow < 0) {
            selectedRow = 0;
        }
        for (int i = 0; i < tableUser.getColumnCount(); i++) {
            Object value = tableUser.getValueAt(0, i);
            /*
            if (value.toString() == null){
                value = tableUser.getValueAt(0, i);
            }
             */
            String columnName = tableUser.getColumnName(i);
            switch (columnName) {
                case "password" ->
                    tfPassword.setText(value.toString());
                case "first_name" ->
                    tfFirstName.setText(value.toString());
                case "last_name" ->
                    tfLastName.setText(value.toString());
                case "email" ->
                    tfEmail.setText(value.toString());
                case "phone_number" ->
                    tfPhoneNumber.setText(value.toString());
                case "address" ->
                    tfAddress.setText(value.toString());
                default -> {
                }
            }
            // handle other columns if needed
        }
    }

    private DefaultTableModel getTableData(ResultSet rs) {
        DefaultTableModel model = new DefaultTableModel();
        try {
            ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                model.addColumn(metaData.getColumnName(columnIndex));
            }
            while (rs.next()) {
                // Creamos un array de objetos para almacenar los datos de una fila
                Object[] row = new Object[columnCount];
                for (int i = 0; i < columnCount; i++) {
                    // Obtenemos el valor de cada celda de la fila actual y lo almacenamos en el array
                    row[i] = rs.getObject(i + 1);
                }
                // Añadimos la fila al modelo
                model.addRow(row);
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
            bancobbdd.showErrorDialog(e.getMessage());
        }
        return model;
    }

    private void refreshTables() {
        tableUser.setModel(getTableData(bancobbdd.getUser(tableUser.getValueAt(0, 0).toString())));
        tableAccounts.setModel(getTableData(bancobbdd.getAccounts(tableUser.getValueAt(0, 0).toString())));
        tableTransactions.setModel(getTableData(bancobbdd.getTransactionsUser(tableUser.getValueAt(0, 0).toString())));
    }

    public Icon getScaledIcon(String path, int width, int height) {
        Icon image = new ImageIcon(new ImageIcon(getClass().getResource(path)).getImage()
                .getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH));
        return image;
    }

    public boolean addUserToAccount(Connection conn, String nif, String iban) {
        try {
            // Verificar si el usuario y la cuenta existen
            PreparedStatement verifyUserStatement = conn.prepareStatement("SELECT COUNT(*) FROM users WHERE NIF=?");
            verifyUserStatement.setString(1, nif);
            ResultSet userResult = verifyUserStatement.executeQuery();
            userResult.next();
            int userCount = userResult.getInt(1);

            PreparedStatement verifyAccountStatement = conn.prepareStatement("SELECT COUNT(*) FROM accounts WHERE account_iban=?");
            verifyAccountStatement.setString(1, iban);
            ResultSet accountResult = verifyAccountStatement.executeQuery();
            accountResult.next();
            int accountCount = accountResult.getInt(1);

            if (userCount != 1 || accountCount != 1) {
                System.err.println("The user or account doesn't exists or there are multiple users/accounts with same NIF/IBAN.");
                bancobbdd.showErrorDialog("The user or account doesn't exists or there are multiple users/accounts with same NIF/IBAN");
                return false;
            }

            // Insertar la relación usuario-cuenta en la tabla "users_account"
            String userAccountSql = "INSERT INTO users_account (NIF, acc_iban) VALUES (?, ?)";
            PreparedStatement userAccountStatement = conn.prepareStatement(userAccountSql);
            userAccountStatement.setString(1, nif);
            userAccountStatement.setString(2, iban);

            // Ejecutar la declaración SQL y obtener el número de filas afectadas
            int userAccountRowsInserted = userAccountStatement.executeUpdate();
            if (userAccountRowsInserted <= 0) {
                System.err.println("Error adding user to account.");
                bancobbdd.showErrorDialog("Error adding user to account");
                return false;
            }

            System.out.println("The user has been succesfully added to account: " + iban);
            return true;
        } catch (SQLException ex) {
            System.err.println("Error adding user to account: " + ex.getMessage());
            ex.getErrorCode();
            bancobbdd.showErrorDialog(ex.getMessage());
        }

        return false;
    }



    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_CloseMouseClicked

    private void CloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseEntered
        Close.setToolTipText("Close"); //Mensaje al pasar cursor por encima
    }//GEN-LAST:event_CloseMouseEntered

    private void MinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_MinimizeMouseClicked

    private void MinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeMouseEntered
        Minimize.setToolTipText("Minimize");  //Mensaje al pasar cursor por encima
    }//GEN-LAST:event_MinimizeMouseEntered

    private void DragDropMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DragDropMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - yy);
    }//GEN-LAST:event_DragDropMouseDragged

    private void DragDropMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DragDropMousePressed
        xx = evt.getX();
        yy = evt.getY();
    }//GEN-LAST:event_DragDropMousePressed

    private void IconoDniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IconoDniMouseClicked

        String respuesta = JOptionPane.showInputDialog(null,
                new JLabel("Enter the NIF number",
                        getScaledIcon("/imagenes/Dni.png", 38, 27), JLabel.CENTER),
                "BINARY BANK", JOptionPane.PLAIN_MESSAGE);
        if (respuesta != null && !respuesta.isEmpty()) {
            ResultSet rsUser = bancobbdd.getUser(respuesta);
            ResultSet rsAccount = bancobbdd.getAccounts(respuesta);
            ResultSet rsTrans = bancobbdd.getTransactionsUser(respuesta);
            tfNIF.setText(respuesta);
            try {
                // Seteamos el modelo de tabla en la JTable para mostrar los datos en la interfaz gráfica
                tableUser.setModel(getTableData(rsUser));
                tableAccounts.setModel(getTableData(rsAccount));
                tableTransactions.setModel(getTableData(rsTrans));

                float money = 0;
                int balanceIndex = -1;
                for (int i = 0; i < tableAccounts.getColumnCount(); i++) {
                    if (tableAccounts.getColumnName(i).equals("balance")) {
                        balanceIndex = i;
                    }
                }
                for(int i = 0; i < tableUser.getColumnCount(); i++) {
                    Object value = tableUser.getValueAt(0, i);
                    String columnName = tableUser.getColumnName(i);
                    if (columnName.equals("disabled")) {
                        System.out.println();
                        if (value.toString() == "true") {
                            currUserDisabled = true;
                            bToggleUser.setText("Enable");
                        } else {
                            currUserDisabled = false;
                            bToggleUser.setText("Disable");
                        }
                    }
                }
                if (balanceIndex != -1) {
                    for (int r = 0; r < tableAccounts.getRowCount(); r++) {
                        money += Float.parseFloat(tableAccounts.getValueAt(r, balanceIndex).toString());
                    }
                }
                if (money < 0.0) {
                    labelUserMoney.setForeground(Color.red);
                } else {
                    labelUserMoney.setForeground(Color.white);
                }
                labelUserMoney.setText("Total Money: " + money);

            } catch (Exception e) {
                // Si hay un error en la conexión con la base de datos, lo imprimimos en la consola
                e.printStackTrace();
                bancobbdd.showErrorDialog(e.getMessage());
            }
        }


    }//GEN-LAST:event_IconoDniMouseClicked

    private void IconoDni1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IconoDni1MouseClicked
        int respuesta = JOptionPane.showConfirmDialog(this, "Are you sure you want to log out?", "BINARY BANK", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            Login ib = new Login();
            ib.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_IconoDni1MouseClicked

    private void tfFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFirstNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nif = tfAddUser.getText();
        String iban = tfIbanAddUser.getText();

        addUserToAccount(conn, nif, iban);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bToggleUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bToggleUserActionPerformed
        // TODO add your handling code here:
        System.out.println(tableUser.getValueAt(0, 0).toString());
        for (int i = 0; i < tableUser.getColumnCount(); i++) {
            Object value = tableUser.getValueAt(0, i);
            /*
            if (value.toString() == null){
                value = tableUser.getValueAt(0, i);
            }
            */
            String columnName = tableUser.getColumnName(i);
            if ("disabled".equals(columnName)) {
                if (value.toString() == "true") {
                    panel.setImagenFondo("/layout/disable.png");
                    bancobbdd.toggleDisableUser(tableUser.getValueAt(0, 0).toString(), 0);
                    currUserDisabled = false;
                } else {
                    panel.setImagenFondo("/layout/enable.png");
                    bancobbdd.toggleDisableUser(tableUser.getValueAt(0, 0).toString(), 1);
                    currUserDisabled = true;
                }
            }
            refreshTables();
            jPanel7.repaint();
        }
    }//GEN-LAST:event_bToggleUserActionPerformed

    private void bToggleUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bToggleUserMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bToggleUserMouseClicked

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked

        System.out.println(tableUser.getValueAt(0, 0).toString());
        for (int i = 0; i < tableUser.getColumnCount(); i++) {
            Object value = tableUser.getValueAt(0, i);
            String columnName = tableUser.getColumnName(i);
            if ("disabled".equals(columnName)) {
                if (value.toString() == "true") {
                    panel.setImagenFondo("/layout/disable.png");
                    bancobbdd.toggleDisableUser(tableUser.getValueAt(0, 0).toString(), 0);
                    currUserDisabled = false;
                } else {
                    panel.setImagenFondo("/layout/enable.png");
                    bancobbdd.toggleDisableUser(tableUser.getValueAt(0, 0).toString(), 1);
                    currUserDisabled = true;
                }
            }
            refreshTables();
        }
        jPanel7.repaint();
    }//GEN-LAST:event_jPanel7MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccountsUser;
    private javax.swing.JLabel Address;
    private javax.swing.JPanel Close;
    private javax.swing.JPanel DragDrop;
    private javax.swing.JLabel EMail;
    private javax.swing.JLabel FirstName;
    private javax.swing.JPanel Fondo;
    private javax.swing.JPanel IconoDni;
    private javax.swing.JPanel IconoDni1;
    private javax.swing.JLabel LastName;
    private javax.swing.JLabel LastestTransactions;
    private javax.swing.JPanel Minimize;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel PhoneNumber;
    private javax.swing.JButton bToggleUser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelUserMoney;
    private javax.swing.JScrollPane spAccounts;
    private javax.swing.JScrollPane spUser;
    private javax.swing.JTable tableAccounts;
    private javax.swing.JTable tableTransactions;
    private javax.swing.JTable tableUser;
    private javax.swing.JTextField tfAddUser;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfIbanAddUser;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfNIF;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfPhoneNumber;
    private javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
}
